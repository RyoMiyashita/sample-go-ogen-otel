// Code generated by ogen, DO NOT EDIT.

package logo

import (
	"fmt"
	"time"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// CreateLogoNoContent is response for CreateLogo operation.
type CreateLogoNoContent struct{}

// Ref: #/components/schemas/Error
type Error struct {
	// The error code.
	Code int32 `json:"code"`
	// The error message.
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int32 {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int32) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// Ref: #/components/schemas/LogoCreate
type LogoCreate struct {
	// The name of the logo.
	Name string `json:"name"`
	// The unique identifier of the account.
	AccountId string `json:"accountId"`
}

// GetName returns the value of Name.
func (s *LogoCreate) GetName() string {
	return s.Name
}

// GetAccountId returns the value of AccountId.
func (s *LogoCreate) GetAccountId() string {
	return s.AccountId
}

// SetName sets the value of Name.
func (s *LogoCreate) SetName(val string) {
	s.Name = val
}

// SetAccountId sets the value of AccountId.
func (s *LogoCreate) SetAccountId(val string) {
	s.AccountId = val
}

// Ref: #/components/schemas/LogoDetail
type LogoDetail struct {
	// The unique identifier of the logo.
	LogoId string `json:"logoId"`
	// The name of the logo.
	Name string `json:"name"`
	// The unique identifier of the account.
	AccountId string `json:"accountId"`
	// The name of the account who updated the logo.
	AccountName string `json:"accountName"`
	// The date and time when the logo was created.
	CreatedAt time.Time `json:"createdAt"`
	// The date and time when the logo was updated.
	UpdatedAt time.Time `json:"updatedAt"`
}

// GetLogoId returns the value of LogoId.
func (s *LogoDetail) GetLogoId() string {
	return s.LogoId
}

// GetName returns the value of Name.
func (s *LogoDetail) GetName() string {
	return s.Name
}

// GetAccountId returns the value of AccountId.
func (s *LogoDetail) GetAccountId() string {
	return s.AccountId
}

// GetAccountName returns the value of AccountName.
func (s *LogoDetail) GetAccountName() string {
	return s.AccountName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *LogoDetail) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *LogoDetail) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetLogoId sets the value of LogoId.
func (s *LogoDetail) SetLogoId(val string) {
	s.LogoId = val
}

// SetName sets the value of Name.
func (s *LogoDetail) SetName(val string) {
	s.Name = val
}

// SetAccountId sets the value of AccountId.
func (s *LogoDetail) SetAccountId(val string) {
	s.AccountId = val
}

// SetAccountName sets the value of AccountName.
func (s *LogoDetail) SetAccountName(val string) {
	s.AccountName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *LogoDetail) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *LogoDetail) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/LogoSearchResult
type LogoSearchResult struct {
	// The logos.
	Logos []LogoDetail `json:"logos"`
	// The total count of logos.
	TotalCount int `json:"totalCount"`
}

// GetLogos returns the value of Logos.
func (s *LogoSearchResult) GetLogos() []LogoDetail {
	return s.Logos
}

// GetTotalCount returns the value of TotalCount.
func (s *LogoSearchResult) GetTotalCount() int {
	return s.TotalCount
}

// SetLogos sets the value of Logos.
func (s *LogoSearchResult) SetLogos(val []LogoDetail) {
	s.Logos = val
}

// SetTotalCount sets the value of TotalCount.
func (s *LogoSearchResult) SetTotalCount(val int) {
	s.TotalCount = val
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
